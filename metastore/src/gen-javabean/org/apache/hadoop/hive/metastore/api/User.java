/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package org.apache.hadoop.hive.metastore.api;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.Collections;
import org.apache.log4j.Logger;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;

public class User implements TBase, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("User");
  private static final TField NAME_FIELD_DESC = new TField("name", TType.STRING, (short)1);
  private static final TField PASSWORD_FIELD_DESC = new TField("password", TType.STRING, (short)2);
  private static final TField SELECT_PRIV_FIELD_DESC = new TField("select_priv", TType.BOOL, (short)3);
  private static final TField INSERT_PRIV_FIELD_DESC = new TField("insert_priv", TType.BOOL, (short)4);
  private static final TField CREATE_PRIV_FIELD_DESC = new TField("create_priv", TType.BOOL, (short)5);
  private static final TField DROP_PRIV_FIELD_DESC = new TField("drop_priv", TType.BOOL, (short)6);
  private static final TField GRANT_PRIV_FIELD_DESC = new TField("grant_priv", TType.BOOL, (short)7);
  private static final TField ALTER_PRIV_FIELD_DESC = new TField("alter_priv", TType.BOOL, (short)8);
  private static final TField CREATE_USER_PRIV_FIELD_DESC = new TField("create_user_priv", TType.BOOL, (short)9);
  private static final TField SUPER_PRIV_FIELD_DESC = new TField("super_priv", TType.BOOL, (short)10);

  private String name;
  public static final int NAME = 1;
  private byte[] password;
  public static final int PASSWORD = 2;
  private boolean select_priv;
  public static final int SELECT_PRIV = 3;
  private boolean insert_priv;
  public static final int INSERT_PRIV = 4;
  private boolean create_priv;
  public static final int CREATE_PRIV = 5;
  private boolean drop_priv;
  public static final int DROP_PRIV = 6;
  private boolean grant_priv;
  public static final int GRANT_PRIV = 7;
  private boolean alter_priv;
  public static final int ALTER_PRIV = 8;
  private boolean create_user_priv;
  public static final int CREATE_USER_PRIV = 9;
  private boolean super_priv;
  public static final int SUPER_PRIV = 10;

  private final Isset __isset = new Isset();
  private static final class Isset implements java.io.Serializable {
    public boolean select_priv = false;
    public boolean insert_priv = false;
    public boolean create_priv = false;
    public boolean drop_priv = false;
    public boolean grant_priv = false;
    public boolean alter_priv = false;
    public boolean create_user_priv = false;
    public boolean super_priv = false;
  }

  public static final Map<Integer, FieldMetaData> metaDataMap = Collections.unmodifiableMap(new HashMap<Integer, FieldMetaData>() {{
    put(NAME, new FieldMetaData("name", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    put(PASSWORD, new FieldMetaData("password", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    put(SELECT_PRIV, new FieldMetaData("select_priv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(INSERT_PRIV, new FieldMetaData("insert_priv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(CREATE_PRIV, new FieldMetaData("create_priv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(DROP_PRIV, new FieldMetaData("drop_priv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(GRANT_PRIV, new FieldMetaData("grant_priv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(ALTER_PRIV, new FieldMetaData("alter_priv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(CREATE_USER_PRIV, new FieldMetaData("create_user_priv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
    put(SUPER_PRIV, new FieldMetaData("super_priv", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.BOOL)));
  }});

  static {
    FieldMetaData.addStructMetaDataMap(User.class, metaDataMap);
  }

  public User() {
  }

  public User(
    String name,
    byte[] password,
    boolean select_priv,
    boolean insert_priv,
    boolean create_priv,
    boolean drop_priv,
    boolean grant_priv,
    boolean alter_priv,
    boolean create_user_priv,
    boolean super_priv)
  {
    this();
    this.name = name;
    this.password = password;
    this.select_priv = select_priv;
    this.__isset.select_priv = true;
    this.insert_priv = insert_priv;
    this.__isset.insert_priv = true;
    this.create_priv = create_priv;
    this.__isset.create_priv = true;
    this.drop_priv = drop_priv;
    this.__isset.drop_priv = true;
    this.grant_priv = grant_priv;
    this.__isset.grant_priv = true;
    this.alter_priv = alter_priv;
    this.__isset.alter_priv = true;
    this.create_user_priv = create_user_priv;
    this.__isset.create_user_priv = true;
    this.super_priv = super_priv;
    this.__isset.super_priv = true;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public User(User other) {
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetPassword()) {
      this.password = new byte[other.password.length];
      System.arraycopy(other.password, 0, password, 0, other.password.length);
    }
    __isset.select_priv = other.__isset.select_priv;
    this.select_priv = other.select_priv;
    __isset.insert_priv = other.__isset.insert_priv;
    this.insert_priv = other.insert_priv;
    __isset.create_priv = other.__isset.create_priv;
    this.create_priv = other.create_priv;
    __isset.drop_priv = other.__isset.drop_priv;
    this.drop_priv = other.drop_priv;
    __isset.grant_priv = other.__isset.grant_priv;
    this.grant_priv = other.grant_priv;
    __isset.alter_priv = other.__isset.alter_priv;
    this.alter_priv = other.alter_priv;
    __isset.create_user_priv = other.__isset.create_user_priv;
    this.create_user_priv = other.create_user_priv;
    __isset.super_priv = other.__isset.super_priv;
    this.super_priv = other.super_priv;
  }

  @Override
  public User clone() {
    return new User(this);
  }

  public String getName() {
    return this.name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public void unsetName() {
    this.name = null;
  }

  // Returns true if field name is set (has been asigned a value) and false otherwise
  public boolean isSetName() {
    return this.name != null;
  }

  public byte[] getPassword() {
    return this.password;
  }

  public void setPassword(byte[] password) {
    this.password = password;
  }

  public void unsetPassword() {
    this.password = null;
  }

  // Returns true if field password is set (has been asigned a value) and false otherwise
  public boolean isSetPassword() {
    return this.password != null;
  }

  public boolean isSelect_priv() {
    return this.select_priv;
  }

  public void setSelect_priv(boolean select_priv) {
    this.select_priv = select_priv;
    this.__isset.select_priv = true;
  }

  public void unsetSelect_priv() {
    this.__isset.select_priv = false;
  }

  // Returns true if field select_priv is set (has been asigned a value) and false otherwise
  public boolean isSetSelect_priv() {
    return this.__isset.select_priv;
  }

  public boolean isInsert_priv() {
    return this.insert_priv;
  }

  public void setInsert_priv(boolean insert_priv) {
    this.insert_priv = insert_priv;
    this.__isset.insert_priv = true;
  }

  public void unsetInsert_priv() {
    this.__isset.insert_priv = false;
  }

  // Returns true if field insert_priv is set (has been asigned a value) and false otherwise
  public boolean isSetInsert_priv() {
    return this.__isset.insert_priv;
  }

  public boolean isCreate_priv() {
    return this.create_priv;
  }

  public void setCreate_priv(boolean create_priv) {
    this.create_priv = create_priv;
    this.__isset.create_priv = true;
  }

  public void unsetCreate_priv() {
    this.__isset.create_priv = false;
  }

  // Returns true if field create_priv is set (has been asigned a value) and false otherwise
  public boolean isSetCreate_priv() {
    return this.__isset.create_priv;
  }

  public boolean isDrop_priv() {
    return this.drop_priv;
  }

  public void setDrop_priv(boolean drop_priv) {
    this.drop_priv = drop_priv;
    this.__isset.drop_priv = true;
  }

  public void unsetDrop_priv() {
    this.__isset.drop_priv = false;
  }

  // Returns true if field drop_priv is set (has been asigned a value) and false otherwise
  public boolean isSetDrop_priv() {
    return this.__isset.drop_priv;
  }

  public boolean isGrant_priv() {
    return this.grant_priv;
  }

  public void setGrant_priv(boolean grant_priv) {
    this.grant_priv = grant_priv;
    this.__isset.grant_priv = true;
  }

  public void unsetGrant_priv() {
    this.__isset.grant_priv = false;
  }

  // Returns true if field grant_priv is set (has been asigned a value) and false otherwise
  public boolean isSetGrant_priv() {
    return this.__isset.grant_priv;
  }

  public boolean isAlter_priv() {
    return this.alter_priv;
  }

  public void setAlter_priv(boolean alter_priv) {
    this.alter_priv = alter_priv;
    this.__isset.alter_priv = true;
  }

  public void unsetAlter_priv() {
    this.__isset.alter_priv = false;
  }

  // Returns true if field alter_priv is set (has been asigned a value) and false otherwise
  public boolean isSetAlter_priv() {
    return this.__isset.alter_priv;
  }

  public boolean isCreate_user_priv() {
    return this.create_user_priv;
  }

  public void setCreate_user_priv(boolean create_user_priv) {
    this.create_user_priv = create_user_priv;
    this.__isset.create_user_priv = true;
  }

  public void unsetCreate_user_priv() {
    this.__isset.create_user_priv = false;
  }

  // Returns true if field create_user_priv is set (has been asigned a value) and false otherwise
  public boolean isSetCreate_user_priv() {
    return this.__isset.create_user_priv;
  }

  public boolean isSuper_priv() {
    return this.super_priv;
  }

  public void setSuper_priv(boolean super_priv) {
    this.super_priv = super_priv;
    this.__isset.super_priv = true;
  }

  public void unsetSuper_priv() {
    this.__isset.super_priv = false;
  }

  // Returns true if field super_priv is set (has been asigned a value) and false otherwise
  public boolean isSetSuper_priv() {
    return this.__isset.super_priv;
  }

  public void setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case PASSWORD:
      if (value == null) {
        unsetPassword();
      } else {
        setPassword((byte[])value);
      }
      break;

    case SELECT_PRIV:
      if (value == null) {
        unsetSelect_priv();
      } else {
        setSelect_priv((Boolean)value);
      }
      break;

    case INSERT_PRIV:
      if (value == null) {
        unsetInsert_priv();
      } else {
        setInsert_priv((Boolean)value);
      }
      break;

    case CREATE_PRIV:
      if (value == null) {
        unsetCreate_priv();
      } else {
        setCreate_priv((Boolean)value);
      }
      break;

    case DROP_PRIV:
      if (value == null) {
        unsetDrop_priv();
      } else {
        setDrop_priv((Boolean)value);
      }
      break;

    case GRANT_PRIV:
      if (value == null) {
        unsetGrant_priv();
      } else {
        setGrant_priv((Boolean)value);
      }
      break;

    case ALTER_PRIV:
      if (value == null) {
        unsetAlter_priv();
      } else {
        setAlter_priv((Boolean)value);
      }
      break;

    case CREATE_USER_PRIV:
      if (value == null) {
        unsetCreate_user_priv();
      } else {
        setCreate_user_priv((Boolean)value);
      }
      break;

    case SUPER_PRIV:
      if (value == null) {
        unsetSuper_priv();
      } else {
        setSuper_priv((Boolean)value);
      }
      break;

    default:
      throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
    }
  }

  public Object getFieldValue(int fieldID) {
    switch (fieldID) {
    case NAME:
      return getName();

    case PASSWORD:
      return getPassword();

    case SELECT_PRIV:
      return new Boolean(isSelect_priv());

    case INSERT_PRIV:
      return new Boolean(isInsert_priv());

    case CREATE_PRIV:
      return new Boolean(isCreate_priv());

    case DROP_PRIV:
      return new Boolean(isDrop_priv());

    case GRANT_PRIV:
      return new Boolean(isGrant_priv());

    case ALTER_PRIV:
      return new Boolean(isAlter_priv());

    case CREATE_USER_PRIV:
      return new Boolean(isCreate_user_priv());

    case SUPER_PRIV:
      return new Boolean(isSuper_priv());

    default:
      throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise
  public boolean isSet(int fieldID) {
    switch (fieldID) {
    case NAME:
      return isSetName();
    case PASSWORD:
      return isSetPassword();
    case SELECT_PRIV:
      return isSetSelect_priv();
    case INSERT_PRIV:
      return isSetInsert_priv();
    case CREATE_PRIV:
      return isSetCreate_priv();
    case DROP_PRIV:
      return isSetDrop_priv();
    case GRANT_PRIV:
      return isSetGrant_priv();
    case ALTER_PRIV:
      return isSetAlter_priv();
    case CREATE_USER_PRIV:
      return isSetCreate_user_priv();
    case SUPER_PRIV:
      return isSetSuper_priv();
    default:
      throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
    }
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof User)
      return this.equals((User)that);
    return false;
  }

  public boolean equals(User that) {
    if (that == null)
      return false;

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_password = true && this.isSetPassword();
    boolean that_present_password = true && that.isSetPassword();
    if (this_present_password || that_present_password) {
      if (!(this_present_password && that_present_password))
        return false;
      if (!java.util.Arrays.equals(this.password, that.password))
        return false;
    }

    boolean this_present_select_priv = true;
    boolean that_present_select_priv = true;
    if (this_present_select_priv || that_present_select_priv) {
      if (!(this_present_select_priv && that_present_select_priv))
        return false;
      if (this.select_priv != that.select_priv)
        return false;
    }

    boolean this_present_insert_priv = true;
    boolean that_present_insert_priv = true;
    if (this_present_insert_priv || that_present_insert_priv) {
      if (!(this_present_insert_priv && that_present_insert_priv))
        return false;
      if (this.insert_priv != that.insert_priv)
        return false;
    }

    boolean this_present_create_priv = true;
    boolean that_present_create_priv = true;
    if (this_present_create_priv || that_present_create_priv) {
      if (!(this_present_create_priv && that_present_create_priv))
        return false;
      if (this.create_priv != that.create_priv)
        return false;
    }

    boolean this_present_drop_priv = true;
    boolean that_present_drop_priv = true;
    if (this_present_drop_priv || that_present_drop_priv) {
      if (!(this_present_drop_priv && that_present_drop_priv))
        return false;
      if (this.drop_priv != that.drop_priv)
        return false;
    }

    boolean this_present_grant_priv = true;
    boolean that_present_grant_priv = true;
    if (this_present_grant_priv || that_present_grant_priv) {
      if (!(this_present_grant_priv && that_present_grant_priv))
        return false;
      if (this.grant_priv != that.grant_priv)
        return false;
    }

    boolean this_present_alter_priv = true;
    boolean that_present_alter_priv = true;
    if (this_present_alter_priv || that_present_alter_priv) {
      if (!(this_present_alter_priv && that_present_alter_priv))
        return false;
      if (this.alter_priv != that.alter_priv)
        return false;
    }

    boolean this_present_create_user_priv = true;
    boolean that_present_create_user_priv = true;
    if (this_present_create_user_priv || that_present_create_user_priv) {
      if (!(this_present_create_user_priv && that_present_create_user_priv))
        return false;
      if (this.create_user_priv != that.create_user_priv)
        return false;
    }

    boolean this_present_super_priv = true;
    boolean that_present_super_priv = true;
    if (this_present_super_priv || that_present_super_priv) {
      if (!(this_present_super_priv && that_present_super_priv))
        return false;
      if (this.super_priv != that.super_priv)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id)
      {
        case NAME:
          if (field.type == TType.STRING) {
            this.name = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case PASSWORD:
          if (field.type == TType.STRING) {
            this.password = iprot.readBinary();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case SELECT_PRIV:
          if (field.type == TType.BOOL) {
            this.select_priv = iprot.readBool();
            this.__isset.select_priv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case INSERT_PRIV:
          if (field.type == TType.BOOL) {
            this.insert_priv = iprot.readBool();
            this.__isset.insert_priv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CREATE_PRIV:
          if (field.type == TType.BOOL) {
            this.create_priv = iprot.readBool();
            this.__isset.create_priv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DROP_PRIV:
          if (field.type == TType.BOOL) {
            this.drop_priv = iprot.readBool();
            this.__isset.drop_priv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case GRANT_PRIV:
          if (field.type == TType.BOOL) {
            this.grant_priv = iprot.readBool();
            this.__isset.grant_priv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case ALTER_PRIV:
          if (field.type == TType.BOOL) {
            this.alter_priv = iprot.readBool();
            this.__isset.alter_priv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CREATE_USER_PRIV:
          if (field.type == TType.BOOL) {
            this.create_user_priv = iprot.readBool();
            this.__isset.create_user_priv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case SUPER_PRIV:
          if (field.type == TType.BOOL) {
            this.super_priv = iprot.readBool();
            this.__isset.super_priv = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.name != null) {
      oprot.writeFieldBegin(NAME_FIELD_DESC);
      oprot.writeString(this.name);
      oprot.writeFieldEnd();
    }
    if (this.password != null) {
      oprot.writeFieldBegin(PASSWORD_FIELD_DESC);
      oprot.writeBinary(this.password);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(SELECT_PRIV_FIELD_DESC);
    oprot.writeBool(this.select_priv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(INSERT_PRIV_FIELD_DESC);
    oprot.writeBool(this.insert_priv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CREATE_PRIV_FIELD_DESC);
    oprot.writeBool(this.create_priv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(DROP_PRIV_FIELD_DESC);
    oprot.writeBool(this.drop_priv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(GRANT_PRIV_FIELD_DESC);
    oprot.writeBool(this.grant_priv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(ALTER_PRIV_FIELD_DESC);
    oprot.writeBool(this.alter_priv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CREATE_USER_PRIV_FIELD_DESC);
    oprot.writeBool(this.create_user_priv);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(SUPER_PRIV_FIELD_DESC);
    oprot.writeBool(this.super_priv);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("User(");
    boolean first = true;

    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("password:");
    if (this.password == null) {
      sb.append("null");
    } else {
        int __password_size = Math.min(this.password.length, 128);
        for (int i = 0; i < __password_size; i++) {
          if (i != 0) sb.append(" ");
          sb.append(Integer.toHexString(this.password[i]).length() > 1 ? Integer.toHexString(this.password[i]).substring(Integer.toHexString(this.password[i]).length() - 2).toUpperCase() : "0" + Integer.toHexString(this.password[i]).toUpperCase());
        }
        if (this.password.length > 128) sb.append(" ...");
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("select_priv:");
    sb.append(this.select_priv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("insert_priv:");
    sb.append(this.insert_priv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("create_priv:");
    sb.append(this.create_priv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("drop_priv:");
    sb.append(this.drop_priv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("grant_priv:");
    sb.append(this.grant_priv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("alter_priv:");
    sb.append(this.alter_priv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("create_user_priv:");
    sb.append(this.create_user_priv);
    first = false;
    if (!first) sb.append(", ");
    sb.append("super_priv:");
    sb.append(this.super_priv);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
    // check that fields of type enum have valid values
  }

}

